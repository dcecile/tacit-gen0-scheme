Syntax:
- significant whitespace
- macros
- custom control flow
- multiple parsing styles
- pointed catenative programming
- literal lists
- datastructure construction
- full type inference

Functions:
- generics
- multidispatch
- definition extension and replacement
- event-driven programming
- property existance and type based dispatch
- conditional dispatch

Data structures:
- garbage-collected references
- partial continuations for exception-handling
- merged tuples and lists
- fixed-point numbers
- optional dynamic typing
- interned data
- traditional data structures
- relational data
- prototype data structures
- shadow values
- iterators

Purity:
- immutable variables
- functional data structures

Modules:
- modules
- recursive modules
- distro

Globalization:
- Unicode source files
- syntax, keyword and standard library globalization

Interop:
- FFI
- XML, YAML, JSON processing

Serialization:
- canonical serialization
- serialized lambdas
- tight reliance on YAML

REPL:
- REPL
- readline
- step debugger
- automatic REPL reload

Commandline help:
- string formatting function and syntax
- changable stdio

Performance:
- better than C++ performance
- compile-time reflection optimization
- compiler const-pointer required optimizations
- compile-time dispatch
- enforced independent threads

Compiler extensions:
- compiler introspection APIs
- recursive REPL access
- hotswapping
- reflection
- low-hanging fruit and performance indicators
- doc generation
- benchmarks and profiling
